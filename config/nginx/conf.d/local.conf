# first we declare our upstream server, which is our Gunicorn application
upstream bisbo_server {
# docker will automatically resolve this to the correct address
# because we use the same name as the service: "web"
    ip_hash;
    server web:9000;
}

# now we declare our main server
server {

    listen 80;
    server_name _;
    client_max_body_size 200M;

    set $cors '';
    if ($http_origin ~ '^https?://(localhost|api.bisbo.com)') {
        set $cors 'true';
    }

    location / {
    # everything is passed to Gunicorn
        proxy_pass http://bisbo_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_connect_timeout       1200;
        proxy_send_timeout          1200;
        proxy_read_timeout          1200;
        send_timeout                1200;


        if ($cors = 'true'){
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'X-ID-KEY,X-ID-VALUE,X-CUSTOMER-KEY,X-CUSTOMER-VALUE,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CSRF-Token,X-SESSION-ID,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'X-ID-KEY,X-ID-VALUE,X-CUSTOMER-KEY,X-CUSTOMER-VALUE,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CSRF-Token,X-SESSION-ID,Authorization' always;
    #                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CSRF-Token,X-SESSION-ID,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location /static/ {
        alias /code/static/;
    }

    location /media/ {
        alias /code/media/;
    }
}

